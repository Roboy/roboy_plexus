=head1 NAME

Glib::VariantType -  Utilities for dealing with the GVariant type system

=cut

=head1 HIERARCHY

  Glib::Boxed
  +----Glib::VariantType



=cut

=for object Glib::VariantType Utilities for dealing with the GVariant type system
=cut




=head1 METHODS

=head2 varianttype = Glib::VariantType-E<gt>B<new> ($type_string)

=over

=item * $type_string (string) 

=back

=head2 varianttype = Glib::VariantType-E<gt>B<new_array> ($element)

=over

=item * $element (Glib::VariantType) 

=back

=head2 varianttype = Glib::VariantType-E<gt>B<new_dict_entry> ($key, $value)

=over

=item * $key (Glib::VariantType) 

=item * $value (Glib::VariantType) 

=back

=head2 varianttype = Glib::VariantType-E<gt>B<new_maybe> ($element)

=over

=item * $element (Glib::VariantType) 

=back

=head2 varianttype = Glib::VariantType-E<gt>B<new_tuple> ($items)

=over

=item * $items (scalar) 

=back

=head2 varianttype = $type-E<gt>B<element> 

=head2 boolean = $type1-E<gt>B<equal> ($type2)

=over

=item * $type2 (Glib::VariantType) 

=back

=head2 varianttype = $type-E<gt>B<first> 

=head2 integer = $type-E<gt>B<hash> 

=head2 boolean = $type-E<gt>B<is_array> 

=head2 boolean = $type-E<gt>B<is_basic> 

=head2 boolean = $type-E<gt>B<is_container> 

=head2 boolean = $type-E<gt>B<is_definite> 

=head2 boolean = $type-E<gt>B<is_dict_entry> 

=head2 boolean = $type-E<gt>B<is_maybe> 

=head2 boolean = $type-E<gt>B<is_subtype_of> ($supertype)

=over

=item * $supertype (Glib::VariantType) 

=back

=head2 boolean = $type-E<gt>B<is_tuple> 

=head2 boolean = $type-E<gt>B<is_variant> 

=head2 varianttype = $type-E<gt>B<key> 

=head2 unsigned = $type-E<gt>B<n_items> 

=head2 varianttype = $type-E<gt>B<next> 

=head2 scalar = $type-E<gt>B<get_string> 

=head2 boolean = Glib::VariantType::string_is_valid ($type_string)

=over

=item * $type_string (string) 

=back



=head2 (type_string, rest) = Glib::VariantType::string_scan ($string)

Scans the start of C<$string> for a complete type string and extracts it.  If
no type string can be found, an exception is thrown.

=head2 varianttype = $type-E<gt>B<value> 



=cut


=head1 SEE ALSO

L<Glib>, L<Glib::Boxed>, L<Glib::Variant>


=cut


=head1 COPYRIGHT

Copyright (C) 2003-2011 by the gtk2-perl team.

This software is licensed under the LGPL.  See L<Glib> for a full notice.



=cut

